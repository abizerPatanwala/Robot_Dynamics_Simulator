%% Initialization
clear, clc, close all
addpath('lib');
nTests = 20; % number of random test configurations

%% Load the robot
robot = make_robot();
[S,M] = make_kinematics_model(robot);
[Mlist,Glist] = make_dynamics_model(robot);
g = [0; 0; -9.81];
%% Verify RNE algorithm
params_rne.g = g; % gravity
params_rne.S = S; % screw axes
params_rne.M = Mlist; % link frames
params_rne.G = Glist; % inertial properties
params_rne.jointPos = [0;0;0;0;0;0];
params_rne.jointVel = [0.2;0.2;0.2;0.2;0.2;0.2];
params_rne.jointAcc = [0.1;0.1;0.1,0.1,0.1,0.1];
params_rne.Ftip = zeros(6,1); % end effector wrench
[tau, V, Vdot] = rne(params_rne);
Options.gravity = g;
Options.fext = [0 0 0 0 0 0];
X = [params_rne.jointPos' params_rne.jointVel' params_rne.jointAcc'];
tau_toolbox = robot.rne(X, g, [0 0 0 0 0 0]);
